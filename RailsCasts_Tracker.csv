Rails Cast #,Topic,Watched?,Quick Summary1,Caching with Instance Variables,9/4/13,Use of memoziation (||=) when caching instance variables in models (e.g. authentication).2,Dynamic find_by Methods,9/4/13,Use of <model>.find_by_<attribute>(<condition>) is powerful syntax.3,Find Through Association,9/4/13,Dynamic find_by can be used through rails model associations.4,Move Find into Model,9/7/13,Repetetive finds (with specific queries) should be moved into model space.5,Using with_scope,10/10/13,"Allows for find options {:k => v} to be passed in from ctrlr to model, autoinherits parameters."6,Shorcut Blocks w/ Symbol to_proc,12/1/14,Use of (&:notation) when using blocks [ e.g. projects.collect(&:name).collect(&:downcase) ]7,Layouts,12/1/14,Priority: Controller Action Render >> In-Line Controller >> Controller >> Application8,Layouts and content_for,12/2/14,"<%= yield :head %> in layout, <% content_for :head do %> ... <% end %> in view"9,Filtering Sensitive Logs,12/6/14,config.filter_parameters += [:password] in config/application.rb (or any other symbols)10,Refactoring User Name Part 1,12/6/14,Move view logic to models (e.g. User#full_name) when repetition occurs.11,Refactoring User Name Part 2,12/6/14,Build tests prior to refactoring in order to ensure methods behave the same.12,Refactoring User Name Part 3,12/6/14,Refactor tests and write methods to make model creation and method calling easier.13,Dangers of Model in Session,12/7/14,Do not store complex objects (e.g. AR models) in session varialbes as DB is not used.14,Performing Calculations on Models,12/9/14,"Use methods like .average, .minimum, .maximum, and .sum on AR models and associations."15,Fun with Find Conditions,12/10/14,"Can pass in arrays, ranges, and nil values to find [ e.g. Task.find_by_priority(1..5) ]."16,Virtual Attributes,12/11/14,Virtual attributes can be used to improve UI w/o impacting storage in database.17,HABTM Checkboxes,12/13/14,Build HABTM checkboxes to change associations. * dom_id( ) and AR_ids = [ ] to set relationships. *18,Looping Through Flash,12/14/14,"<% flash.each do |key, msg| %> <%= content_tag :div, msg, :id => key %> <% end %> for flash."19,Where Administration Goes,12/15/14,Separation of admin/ interface isn't always necessary; recommend doing it inline on index pages.20,Restricting Access,12/15/14,"Use of admin? and before_filter :authorize, :except => :index to protect pages from being visited."21,Super Simple Authentication,12/15/14,Use session[:password] via /login action & match via admin? to allow admin access to simple site.22,Eager Loading,12/16/14,Use eager loading to load additional model associations to reduce SQL queries run in project.23,Counter Cache Column,12/17/14,"Keep track of DB model count in base model (belongs_to :base, :counter_cache => true)"24,The Stack Trace,12/26/14,The stack trace when in Ruby / Rails is useful in debugging precisely where issues occur.25,SQL Injection,1/1/15,"Use ? to prevent SQL Injection - e.g. Model.where([""name LIKE ?"", ""%#{params[:query]}%""])"26,Hackers Love Mass Assignment,1/3/15,"For Rails <= 3.X, use attr_accessible to whitelist attributes for mass assignment."27,Cross Site Scripting,1/5/15,Use h method in views and CGI::escape method in controllers to prevent CSS from happening.28,in_groups_of,1/5/15,"Use in_group_of to split array into subarrays: <% @tasks.in_groups_of(4, false) do |row_tasks| %>"29,group_by,1/5/15,Use group_by { |e| e.send(:method) } to group elements by criteria into key-value pairs.30,Pretty Page Title,1/5/15,Create a title method in ApplicationHelper to assist in page titles: content_for(:title) { page_title }31,Formatting Time,1/8/15,"In environment.rb => Time::DATE_FORMATS[:due_time] = ""due on %B %d at %I:%M %p"""32,Time in Text Field,1/9/15,Use virtual attributes (getter/setter) & custom validations to properly parse and display time in text.33,Making a Plugin,1/12/15,Plugins can be made to provide functionality to models (encapsulate code) [e.g. ActiveRecord].34,Named Routes,1/13/15,[OBE] map.named_route can be used in <= Rails 2 to define a name route (*_path & *_url).35,Custom REST Actions,1/18/15,"Create :member / :collection routes in routes.rb for custom controller actions => ""REST is best!"""36,Subversion on Rails,1/18/15,[OBE] Instructions on how to setup Subversion in Rails => Git is now the 'global' preference.37,Simple Search Form,1/18/15,"Use form_tag // GET to request info from #index, create Model.search to encapsulate logic."38,Multibutton Form,1/19/15,Name the new button and check for it in controller (e.g. params[:preview_button] || !@project.save).39,Customize Field Error,1/19/15,"[OBE] ActionView::Base.field_error_proc = Proc.new do |html_tag, instance_tag| in environment.rb"40,Blocks in View,1/19/15,"[OBE] concat content_tag(:div, capture(&block), :class => 'admin'), block.binding if admin?"41,Conditional Validations,1/20/15,Define methods on validations (:if => :should_validate_password?) & attr_accessor in controllers.42,with_options,1/20/15,Use with_options (with_options :if => :should_validate_password? do |user|) to remove duplication.43,AJAX with RJS,2/2/15,RJS (now UJS) can be used to return JS to the client from controller which will be executed inline.44,Debugging RJS,2/3/15,"RJS (UJS) should be debugged by looking at development log for immediate issues, then in JS."45,RJS Tips,2/3/15,[OBE] RJS (UJS) templating tips are show in this RailsCasts but are no longer the default.46,Catch-all Route,2/4/15,Add in a 'match *' route in routes.rb to deal with things like redirects or unintended routes.47,Two Many-to-Many,2/4/15,Use HABTM when only foreign keys are needed in join table and has_many :through otherwise.48,Console Tricks,2/10/15,Use a bunch of useful tricks (e.g. rails c --sandbox // app.user_path) when in Rails console.49,Reading the API,2/16/15,Head to http://api.rubyonrails.org/ for additional info on Rails declarations (other options as well).50,Contributing to Rails,3/10/15,[OBE] Tips on how to submit patches to legacy Rails code base.51,will_paginate,3/25/15,Use the will_paginate gem to provide custom pagination cross different Rails pages.52,Update through Checkboxes,3/25/15,Create form_tags to post multiple checkbox IDs to controllers where update actions are exectued.53,Handling Exceptions,3/25/15,"Use public pages, rescue_from, or Rack Middleware via routes to customize exception handling."54,Debugging Ruby,3/26/15,"Use Ruby debugger, now byebug in Ruby 2.X, for debugging in Ruby / RoR applications."55,Cleaning Up the View,4/3/15,"Cleaning up views - view logic to helpers, business logic to models, lists to partials with collections."56,The Logger,4/4/15,"Use logger (5 levels) to output messages to log, define your own, rake log:clear to empty out logs."57,Create Model Through Text Field,04/05/15,Use attr_accessible + before_save callback to create model 'on the fly'.58,,,59,,,60,,,61,,,62,,,63,,,64,,,65,,,66,,,67,,,68,,,69,,,70,,,71,,,72,,,73,,,74,,,75,,,76,,,77,,,78,,,79,,,80,,,81,,,82,,,83,,,84,,,85,,,86,,,87,,,88,,,89,,,90,,,91,,,92,,,93,,,94,,,95,,,96,,,97,,,98,,,99,,,100,,,101,,,102,,,103,,,104,,,105,,,106,,,107,,,108,,,109,,,110,,,111,,,112,,,113,,,114,,,115,,,116,,,117,,,118,,,119,,,120,,,121,,,122,,,123,,,124,,,125,,,126,,,127,,,128,,,129,,,130,,,131,,,132,,,133,,,134,,,135,,,136,,,137,,,138,,,139,,,140,,,141,,,142,,,143,,,144,,,145,,,146,,,147,,,148,,,149,,,150,,,151,,,152,,,153,,,154,,,155,,,156,,,157,,,158,,,159,,,160,,,161,,,162,,,163,,,164,,,165,,,166,,,167,,,168,,,169,,,170,,,171,,,172,,,173,,,174,,,175,,,176,,,177,,,178,,,179,,,180,,,181,,,182,,,183,,,184,,,185,,,186,,,187,,,188,,,189,,,190,,,191,,,192,,,193,,,194,,,195,,,196,,,197,,,198,,,199,,,200,,,201,,,202,,,203,,,204,,,205,,,206,,,207,,,208,,,209,,,210,,,211,,,212,,,213,,,214,,,215,,,216,,,217,,,218,,,219,,,220,,,221,,,222,,,223,,,224,,,225,,,226,,,227,,,228,,,229,,,230,,,231,,,232,,,233,,,234,,,235,,,236,,,237,,,238,Mongoid,10/28/13,"Showcase of Mongoid driver in Ruby for MongoDB - DB setup, design, and implementation."239,,,240,,,241,,,242,,,243,,,244,,,245,,,246,,,247,,,248,,,249,,,250,,,251,,,252,,,253,,,254,,,255,,,256,,,257,,,258,,,259,,,260,,,261,,,262,,,263,,,264,,,265,,,266,,,267,,,268,,,269,,,270,,,271,,,272,,,273,,,274,,,275,How I Test,10/2/13,"Workflow of TDD using Rspec, Capybara, Factory Girl, and Girl w/ password reset link."276,,,277,,,278,,,279,,,280,,,281,,,282,,,283,,,284,,,285,,,286,,,287,,,288,,,289,,,290,,,291,,,292,,,293,,,294,,,295,,,296,,,297,,,298,,,299,,,300,,,301,,,302,,,303,,,304,,,305,,,306,,,307,,,308,,,309,,,310,,,311,,,312,,,313,,,314,,,315,,,316,,,317,,,318,,,319,,,320,Jbuilder,10/1/13,Jbuilder is used to create custom JSON objects via DSL for Rails models.321,,,322,,,323,,,324,,,325,,,326,,,327,,,328,,,329,,,330,,,331,,,332,,,333,,,334,,,335,,,336,,,337,,,338,,,339,,,340,,,341,,,342,,,343,,,344,,,345,,,346,,,347,,,348,,,349,,,350,,,351,,,352,,,353,,,354,,,355,,,356,,,357,,,358,,,359,,,360,,,361,,,362,,,363,,,364,,,365,,,366,,,367,,,368,,,369,,,370,,,371,,,372,,,373,,,374,,,375,,,376,,,377,,,378,,,379,,,380,,,381,,,382,,,383,,,384,,,385,,,386,,,387,,,388,,,389,,,390,,,391,,,392,,,393,,,394,,,395,,,396,,,397,,,398,,,399,,,400,,,401,,,402,,,403,,,404,,,405,,,406,,,407,,,408,,,409,,,410,,,411,,,412,,,413,,,414,,,415,,,416,,,417,Foundation,2/14/15,"Foundation is a mobile-first,responsive, FED-library based on SCSS - easily integrates with Rails."